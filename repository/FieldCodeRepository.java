package repository;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map.Entry;
import java.util.Set;
import java.util.Vector;

public class FieldCodeRepository {

   private static volatile FieldCodeRepository repository;

   private static HashMap<String, String> fieldCode;

   private final String[] keys = new String[] {
      "032902", "147603", "116409", "032604", "074701", "031401", "105901",
      "106002", "084903", "031007", "074603", "032102", "116402", "032004", "106201", "116601", "116501",
      "032601", "032402", "032401", "074607", "137001", "031309", "189102", "064101", "074608", "032804",
      "064203", "085001", "032002", "032901", "032602", "032605", "105902", "033003", "032303", "053802",
      "105802", "032001", "032202", "032101", "033109", "074601", "106309", "106102", "032502", "031101",
      "074604", "106301", "105801", "126801", "137105", "032509", "031902", "074605", "032309", "043501",
      "147601", "137103", "031802", "168505", "085209", "168507", "032803", "032501", "189101", "032201",
      "032003", "032805", "043502", "064102", "031006", "147509", "032702", "064201", "033001", "032801",
      "031302", "064204", "032301", "031709", "053803", "116401", "074704", "031701", "032701", "032103",
      "031005", "137309", "020702", "147502", "033309", "031801", "010101", "074502", "032703", "168501",
      "032403", "032302", "032809", "074707", "033101", "031702", "031008", "085101", "032005", "074501",
      "137201", "084902", "031001", "010301", "031602", "033201", "095601", "032603", "032802", "137209",
      "031102", "074703", "168506", "031002", "033303", "031501", "033302", "033103", "095501", "064202",
      "074602", "189001", "137302", "137106", "074709", "031304", "199501", "020501", "147503", "116602",
      "147401", "137104", "031403", "033004", "031003", "031601", "031301", "074606", "031303", "053901",
      "033301", "043503", "031201", "116502", "199609", "147602", "074708", "033102", "031502"
   };

   private final String[] values = new String[] {
      "특수 목적용 기계 제조업", "산업용 기계 및 장비 임대업", "기타 금융업", "통신 및 방송 장비 제조업",
      "종합 소매업", "봉제의복 제조업", "영화, 비디오물, 방송프로그램 제작 및 배급업", "텔레비전 방송업", "도로 화물 운송업", "기타 식품 제조업", "음·식료품 및 담배 도매업",
      "의약품 제조업", "신탁업 및 집합투자업", "기타 화학제품 제조업", "컴퓨터 프로그래밍, 시스템 통합 및 관리업", "금융 지원 서비스업", "보험업", "반도체 제조업",
      "1차 비철금속 제조업", "1차 철강 제조업", "기타 전문 도매업", "자연과학 및 공학 연구개발업", "기타 섬유제품 제조업", "유원지 및 기타 오락관련 서비스업", "건물 건설업",
      "상품 종합 도매업", "전구 및 조명장치 제조업", "전기 및 통신 공사업", "해상 운송업", "합성고무 및 플라스틱 물질 제조업", "일반 목적용 기계 제조업", "전자부품 제조업",
      "영상 및 음향기기 제조업", "오디오물 출판 및 원판 녹음업", "자동차 신품 부품 제조업", "시멘트, 석회, 플라스터 및 그 제품 제조업", "폐기물 처리업",
      "소프트웨어 개발 및 공급업", "기초 화학물질 제조업", "플라스틱제품 제조업", "기초 의약물질 및 생물학적 제제 제조업", "그외 기타 운송장비 제조업", "상품 중개업",
      "기타 정보 서비스업", "전기 통신업", "무기 및 총포탄 제조업", "알코올음료 제조업", "생활용품 도매업", "자료처리, 호스팅, 포털 및 기타 인터넷 정보매개 서비스업",
      "서적, 잡지 및 기타 인쇄물 출판업", "부동산 임대 및 공급업", "회사 본부 및 경영 컨설팅 서비스업", "기타 금속 가공제품 제조업", "석유 정제품 제조업",
      "기계장비 및 관련 물품 도매업", "기타 비금속 광물제품 제조업", "전기업", "운송장비 임대업", "광고업", "기록매체 복제업", "일반 교습 학원", "기타 운송관련 서비스업",
      "교육지원 서비스업", "절연선 및 케이블 제조업", "구조용 금속제품, 탱크 및 증기발생기 제조업", "스포츠 서비스업", "고무제품 제조업", "비료, 농약 및 살균, 살충제 제조업",
      "가정용 기기 제조업", "연료용 가스 제조 및 배관공급업", "토목 건설업", "곡물가공품, 전분 및 전분제품 제조업", "기타 사업지원 서비스업",
      "측정, 시험, 항해, 제어 및 기타 정밀기기 제조업; 광학기기 제외", "기반조성 및 시설물 축조관련 전문공사업", "자동차용 엔진 및 자동차 제조업",
      "전동기, 발전기 및 전기 변환 · 공급 · 제어 장치 제조업", "직물직조 및 직물제품 제조업", "실내건축 및 건축마무리 공사업", "유리 및 유리제품 제조업",
      "기타 종이 및 판지 제품 제조업", "해체, 선별 및 원료 재생업", "은행 및 저축기관", "섬유, 의복, 신발 및 가죽제품 소매업", "펄프, 종이 및 판지 제조업",
      "의료용 기기 제조업", "의료용품 및 기타 의약 관련제품 제조업", "낙농제품 및 식용빙과류 제조업", "그외 기타 전문, 과학 및 기술 서비스업", "기타 비금속광물 광업",
      "여행사 및 기타 여행보조 서비스업", "그외 기타 제품 제조업", "인쇄 및 인쇄관련 산업", "작물 재배업", "자동차 부품 및 내장품 판매업", "사진장비 및 광학기기 제조업",
      "초등 교육기관", "금속 주조업", "내화, 비내화 요업제품 제조업", "기타 전기장비 제조업", "연료 소매업", "선박 및 보트 건조업", "골판지, 종이 상자 및 종이용기 제조업",
      "동물용 사료 및 조제식품 제조업", "항공 여객 운송업", "화학섬유 제조업", "자동차 판매업", "건축기술, 엔지니어링 및 관련 기술 서비스업", "육상 여객 운송업",
      "도축, 육류 가공 및 저장 처리업", "어로 어업", "나무제품 제조업", "가구 제조업", "음식점업", "컴퓨터 및 주변장치 제조업", "일차전지 및 축전지 제조업",
      "기타 과학기술 서비스업", "비알코올음료 및 얼음 제조업", "가전제품 및 정보통신장비 소매업", "기타 교육기관", "수산물 가공 및 저장 처리업", "운동 및 경기용구 제조업",
      "가죽, 가방 및 유사제품 제조업", "악기 제조업", "항공기,우주선 및 부품 제조업", "일반 및 생활 숙박시설 운영업", "건물설비 설치 공사업",
      "산업용 농·축산물 및 동·식물 도매업", "창작 및 예술관련 서비스업", "전문디자인업", "기타 전문 서비스업", "무점포 소매업", "섬유제품 염색, 정리 및 마무리 가공업",
      "컴퓨터 및 통신장비 수리업", "석탄 광업", "경비, 경호 및 탐정업", "보험 및 연금관련 서비스업", "사업시설 유지·관리 서비스업", "시장조사 및 여론조사업", "편조의복 제조업",
      "자동차 재제조 부품 제조업", "과실, 채소 가공 및 저장 처리업", "제재 및 목재 가공업", "방적 및 가공사 제조업", "건축자재, 철물 및 난방장치 도매업", "편조원단 제조업",
      "환경 정화 및 복원업", "귀금속 및 장신용품 제조업", "증기, 냉·온수 및 공기조절 공급업", "담배 제조업", "재 보험업", "그외 기타 개인 서비스업", "개인 및 가정용품 임대업",
      "기타 상품 전문 소매업", "철도장비 제조업", "신발 및 신발 부분품 제조업"
   };

   private FieldCodeRepository() {
      fieldCode = new HashMap<>();
      
      for (int i = 0; i < keys.length; ++i) {
         fieldCode.put(keys[i], values[i]);
      }
   }

   public static FieldCodeRepository getInstance() {
      if (repository == null) {
         synchronized (FieldCodeRepository.class) {
            repository = new FieldCodeRepository();
         }
      }
      return repository;
   }

   public boolean containsFieldCode(String code) {
      return fieldCode.containsKey(code);
   }

   public boolean containsFieldName(String name) {
      return fieldCode.containsValue(name);
   }

   public String getFieldName(String code) {
      return fieldCode.get(code);
   }
   
   public Vector<String> getFieldCodes(String name) {
	   Vector<String> vlist = new Vector<>();
	   
	   getFieldCodeKeys().forEach(mapper -> {
		   if (fieldCode.get(mapper).contains(name)) {
			   vlist.addElement(mapper);
		   }
	   });
	   return vlist;
   }

   public Set<Entry<String, String>> getEntries() {
      return fieldCode.entrySet();
   }

   public Set<String> getFieldCodeKeys() {
      return fieldCode.keySet();
   }
}